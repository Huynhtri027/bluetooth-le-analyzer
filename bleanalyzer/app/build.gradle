apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        applicationId "com.github.akinaru.bleanalyzer"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 7
        versionName "1.6"
    }

    signingConfigs {
        playStore
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            signingConfig signingConfigs.playStore
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:25.0.1"
    compile 'com.android.support:design:25.0.1'
    compile 'com.android.support:recyclerview-v7:25.0.1'
    compile 'com.neovisionaries:nv-bluetooth:1.8'
    compile 'com.github.PhilJay:MPAndroidChart:v2.2.3'
    compile 'fr.bmartel:seekbar:0.1'
}


def Properties props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
}

if (props.containsKey('STORE_FILE')
        && props.containsKey('STORE_PASSWORD')
        && props.containsKey('KEY_ALIAS')
        && props.containsKey('KEY_PASSWORD')) {
    android.signingConfigs.playStore.storeFile = file(props['STORE_FILE'])
    android.signingConfigs.playStore.storePassword = props['STORE_PASSWORD']
    android.signingConfigs.playStore.keyAlias = props['KEY_ALIAS']
    android.signingConfigs.playStore.keyPassword = props['KEY_PASSWORD']
} else {
    println 'signing.properties not found or incomplete'
    android.buildTypes.release.signingConfig = null
}
